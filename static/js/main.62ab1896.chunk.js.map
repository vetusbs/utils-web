{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","text","componentDidMount","bind","shuffle","fetch","then","res","data","console","log","setState","catch","e","preventDefault","className","onClick","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAiDeA,G,wDA5Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAER,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBANE,E,gEASE,IAAD,OAClBE,MAAM,iDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIN,UAChBK,MAAK,SAACE,GACLC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEV,KAAMO,OAEvBI,MAAMH,QAAQC,O,8BAGTG,GAAI,IAAD,OACTA,EAAEC,iBACFT,MAAM,iDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIN,UAChBK,MAAK,SAACE,GACLC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEV,KAAMO,OAEvBI,MAAMH,QAAQC,O,+BAIf,OACA,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wBAAQC,QAASC,KAAKb,QAAtB,2BACA,8BACKa,KAAKjB,MAAMC,gB,GAtCNiB,cCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.62ab1896.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: \"\",\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://api-utils.herokuapp.com/random/string')\n    .then(res => res.text())\n    .then((data) => {\n      console.log(data)\n      this.setState({ text: data })\n    })\n    .catch(console.log)\n  }\n\n  shuffle(e) {    \n    e.preventDefault();    \n    fetch('https://api-utils.herokuapp.com/random/string')\n    .then(res => res.text())\n    .then((data) => {\n      console.log(data)\n      this.setState({ text: data })\n    })\n    .catch(console.log)\n  }\n\n  render() {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={this.shuffle}>RANDOM STRING</button>\n        <div>\n            {this.state.text}\n        </div>\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}